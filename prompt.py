from config import PIECE_MAP

def format_board(board: list) -> str:
    """格式化棋盘为更直观的二维表格形式，包含行列编号和棋子中文名称"""
    formatted = ["棋盘状态（行号 1-10，列号 1-9，从上到下为黑方到红方）："]
    formatted.append("    列1 列2 列3 列4 列5 列6 列7 列8 列9")
    for i, row in enumerate(board, 1):
        row_str = f"行{i:<2} "
        for piece in row:
            display = "--" if piece == "--" else PIECE_MAP.get(piece, piece)
            row_str += f"{display:<4} "
        formatted.append(row_str.strip())
    return "\n".join(formatted)

def get_current_positions(side: str, board: list) -> str:
    """返回当前玩家的所有棋子位置"""
    positions = [f"你的棋子当前位置（{side}）："]
    for i, row in enumerate(board):
        for j, piece in enumerate(row):
            if piece.startswith(side):
                positions.append(f"- {PIECE_MAP.get(piece, piece)}: 行{i+1} 列{j+1}")
    return "\n".join(positions)

def get_player_prompt(side: str, board: list) -> str:
    """生成玩家提示词，要求模型复述规则并思考"""
    role = "红方" if side == "R" else "黑方"
    return f'''
    你正在参与中国象棋对战，当前为{role}。以下是当前棋盘状态：

    {format_board(board)}

    {get_current_positions(side, board)}

    注意：
    - 棋盘行号从 1 到 10（从上到下），列号从 1 到 9（从左到右），用于显示和理解位置。
    - 黑方位于上半部（行 1-5），红方位于下半部（行 6-10）。
    - 你的任务是根据规则选择一个合法且有意义的移动，必须严格对照棋盘状态。

    棋子代码规则（用于移动指令）：
    - R-红方，B-黑方
    - K-将/帅，S-士，X-象，M-马，C-车，P-炮，B-兵/卒
    - 示例：RS1-红士1，BC2-黑车2，RK-红将，BK-黑将

    移动规则（详细说明）：
    1. 将/帅：帅（将）是棋中的首脑，只能活动在九宫之内（红方行8-10列4-6，黑方行1-3列4-6），每次按横线或竖线走一格。
       - 检查：目标在九宫格内（行±1或列±1之一）；不能与对方将直接对面（同列且中间无棋子）。
       - 示例：红将（RK）在行10列5，若行9列5为空且黑将不在列5上方无阻隔，可移到行9列5；若黑将（BK）在行1列5且中间无棋子，则不能移到行9列5。
    2. 士：仕（士）是将（帅）的保镖，只能在九宫内沿四条斜线走一步。
       - 检查：目标在九宫格内，且为斜线一步（行±1且列±1）。
       - 示例：红士1（RS1）在行10列4，若行9列5为空，可移到行9列5；若目标不在九宫内（如行7列3），则非法。
    3. 象：相（象）用于防守，走"田"字（斜走两格，行±2且列±2），不能过河，象眼（田字中央）必须为空。
       - 检查：红方限于行6-10，黑方限于行1-5；象眼（如从行10列3到行8列5，象眼为行9列4）为空。
       - 示例：红象1（RX1）在行10列3，若行9列4为空，可到行8列5；若行9列4有棋子（塞象眼），则不能走。
    4. 马：马走"日"字（先直走1格再斜走1格，行±1列±2或行±2列±1），马腿（直走方向相邻格）必须为空。
       - 检查：马腿为空（如从行10列2到行8列3，马腿为行9列2）；目标在棋盘内。
       - 示例：红马1（RM1）在行10列2，若行9列2为空，可到行8列3；若行9列2有棋子（蹩马腿），则不能走。
    5. 车：车威力最大，沿行或列直线移动任意格，路径上任何棋子（己方或对方）都会阻挡，不能跳过；若路径全空且目标为对方棋子可吃，否则只能移到空位。
       - 检查：逐格验证路径全空（从起点到目标前一格，如行10列1到行8列1，检查行9列1）。
       - 示例：红车1（RC1）在行10列1，若行9列1至行7列1为空，可到行8列1；若行7列1有红兵1，则只能到行8列1。
    6. 炮：炮在不吃子时与车相同，移动任意格；吃子时需隔一个棋子（炮架，己方或对方均可），是唯一可越子的棋种。
       - 检查：空走时路径全空；吃子时起点到目标间有且仅一个棋子（炮架）。
       - 示例：红炮1（RP1）在行8列2，若行7列2至行5列2为空，可到行6列2；若行6列2有棋子、行4列2有对方棋子且仅隔一子，可吃到行4列2。
    7. 兵/卒：兵（卒）过河前只能向前一步（红方行6-10向上行-1，黑方行1-5向下行+1），过河后可向前或左右一步（列±1），不能后退。
       - 检查：红方过河前只能行-1，过河后（行1-5）可行-1或列±1；黑方过河前只能行+1，过河后（行6-10）可行+1或列±1；目标在棋盘内。
       - 示例：红兵1（RB1）在行7列1，若行6列1为空，可到行6列1；若在行4列1，行4列2有黑卒2可吃到行4列2。

    吃子规则：
    - 只能吃对方棋子，目标位置替换为你的棋子，原位置变空。例如，红车1从行10列1到行4列1吃黑卒1（若路径全空）。
    - 不能吃己方棋子，例如红车1不能移动到红兵1位置。

    移动优先级（策略指导）：
    - 优先级1：吃对方高价值棋子（如车=9分，炮=4.5分，马=4分，象/士=2分，兵/卒=1分，过河兵/卒=2分）。
    - 优先级2：吃对方低价值棋子。
    - 优先级3：推进到空位，靠近对方阵营（黑方行1-3，红方行8-10）。

    请按照以下步骤回答：
    1. **复述规则**：用简洁语言重复上述移动规则和吃子规则，确保理解正确。
    2. **分析过程**：根据棋盘状态和你的棋子位置，分析一个可能的移动，说明：
       - 起点（行号/列号）：从你的棋子位置中选择。
       - 目标位置（行号/列号）：根据规则计算。
       - 路径检查：逐格列出路径上的每个位置（从起点到目标前一格），对照棋盘状态确认是否全空（车、炮空走）或符合条件（炮架、马腿、象眼）。
       - 目标位置检查：对照棋盘状态，确认是否为对方棋子（可吃）或空位（不可为己方棋子）。
       - 规则依据和优先级理由：说明为何选择此移动（如“吃黑卒1价值1优于空走”）。
       - 合法性确认：验证路径和目标是否符合规则。
    3. **返回移动**：根据分析，将目标位置转换为下标并返回，格式为：
       [棋子代码, [目标行下标, 目标列下标]]
       - 行下标从 0 到 9，列下标从 0 到 8（下标 = 行号/列号 - 1）。
       - 示例：红车1从行10列1到行8列1（空位），指令为 ["RC1", [7, 0]]。
       - 确保移动指令与分析过程一致！

    输出格式：
    规则复述
    [你的规则复述]

    分析过程
    [你的分析过程]

    移动指令
    [棋子代码, [目标行下标, 目标列下标]]
    只返回上述格式的内容，不要添加多余信息！
    '''

def get_referee_prompt(move: tuple, board: list) -> str:
    """生成裁判提示词"""
    piece, start_pos, end_pos = move
    return f'''
    请根据中国象棋规则判断以下移动是否合法：

    移动棋子：{PIECE_MAP.get(piece, piece)}
    起始位置：行{start_pos[0]+1} 列{start_pos[1]+1}
    目标位置：行{end_pos[0]+1} 列{end_pos[1]+1}

    当前棋盘状态：
    {format_board(board)}

    检查规则：
    1. 是否符合该棋子的移动规则。
    2. 是否违反特殊限制（马腿、象眼、炮架等）。
    3. 是否超出棋盘范围（行下标 0-9，列下标 0-8）。
    4. 目标位置是否为己方棋子（不允许吃己方棋子）。
    5. 路径上是否有障碍（对于车、炮、马等）。

    只返回单个数字：
    1 - 合法
    0 - 非法
    不要包含其他任何内容！
    '''